2010314487 김종욱

Multicore System Assignment - MPI Exercise


A. Data Structure
 기본적으로 스레드 간의 통신환경을 구축하기 위해, 행렬을 스레드 개수만큼의 일정한 사각형으로 나눈 뒤,
각각의 스레드가 담당하는 행렬의 범위를 XY축으로 시작과 끝을 Comm_rank에 관계하여 저장하고, 서로가 통신해야할
상대 스레드의 rank를 저장한다. 행렬을 사각형 모양으로 나누게되므로, 전송과 송신이 각각 한 줄의 배열로 이루어진 
일정한 개수의 변수 집합을 받게 된다.

B. Algorithm
 Cannon Matrix의 초기화부분은 XY축별로 각각 한 줄씩 수행되게 되는데, 각 스레드가 담당하는 위치의 원소들을
Shift할 위치로 옮긴 뒤, 모든 스레드의 배열을 MPI_Allreduce를 통해 합해진 배열을 만들어, 
그 배열에서 각 스레드가 담당하는 위치로 옮겨진 원소의 값들을 다시 본 행렬에 복사하게 된다. 초기화와 마무리 함수는
같은 알고리즘으로, 서로 정반대로 이동되게 구성된다. 
 본 루프의 Shift 알고리즘은 축 당 서로 같은 수의 데이터를 송수신하기 때문에, A 행렬에서는 행의 줄을 임시 배열변수로
옮기는 것을 제외하면 MPI_Sendrecv를 통한 데이터의 송수신으로 간략하게 구성될 수 있다. 여기서 각각의 행렬을
재정렬하여 성능이 감소되는 것을 막기위해서, 데이터가 갱신된 위치의 다음 줄을 시작 축으로 삼아 C 행렬의 계산을 수행하게한다.

C. Difference between Blocking and Non-Blocking
 기본적인 알고리즘에서의 변경점은 크게 존재하지 않지만, Non-Blocking 방식에서는 전송 시의 딜레이를 사용하여 이후에
작업할 것들을 미리 수행하는 방식을 이용한다. MPI_Allreduce를 MPI_Iallreduce로 변경해 이후의 작업을 수행하고,
본 루프의 Shift시에는 Irecv와 Isend의 위치를 조정하여 전송이 이루어지는 동안 다음 전송 데이터의 적재를 수행하게 된다.