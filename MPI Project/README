
2010314487 김종욱

Multicore System Assignment - MPI Project


A. Data Structure
모든 스레드는 각 스레드의 rank를 이용하여 자신이 담당하는 범위를 만든 뒤, (해당 범위 + 메세지 패싱용) 만큼의 X 좌표를 가지는 큐브와 데빌 큐브를 동적할당한다.


B. Algorithm
기본적으로 다른 프로젝트의 방식과 동일하게 진행하지만, Devil과 Live Dead 스테이지에서 메세지 패싱 작업을 추가로 수행하게 된다.
Devil stage에서는 데빌 이동 시, x좌표축을 움직이게 되면 자신의 범위 이외의 1칸 밖으로, 즉 미리 할당해둔 메세지 패싱용 x축으로 들어가는 부분이 생기게 되며, 이 부분을 서로가 인접 스레드로 전달하게 된다.
Live Dead stage에서는 시작 시, x좌표축의 시작과 끝 지점은 게임 룰 상 주변 셀의 데이터가 필요하게 되므로, 이를 메세지 패싱을 통하여 전달받은 뒤 작업을 시작하게 된다.

Angel stage는 Devil stage 진행 중 미리 축적해둔 엔젤 방향의 데빌 개수를 이용하여, 각자가 자신 범위안의 엔젤 범위의 데빌을 제거하게 된다.

모든 스레드가 각자의 범위만큼만 큐브를 가지므로, 결과물 출력 시에도 순차적으로 모든 스레드가 수행해야 한다.


C. Way to speed up
데빌의 복사는 전체 데빌 수만큼 각자가 시드를 갱신하지만, 이를 비교문으로 체크하여 자신의 범위에 해당하는 데빌좌표만 메모리에 배치하게 된다.
데빌 개수는 모두 각자가 센 뒤, Allreduce를 이용하여 엔젤 이동이나, 데빌 증식 등 해당 처리시점 전에 수를 합치게 된다.
